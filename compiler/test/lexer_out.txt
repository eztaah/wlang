[
    {TOKEN_FUN, "fun"},
    {TOKEN_ID, "i32_to_asciicode"},
    {TOKEN_LPAREN, "("},
    {TOKEN_MUT, "cst"},
    {TOKEN_ID, "num"},
    {TOKEN_COLON, ":"},
    {TOKEN_TYPE, "I64"},
    {TOKEN_RPAREN, ")"},
    {TOKEN_COLON, ":"},
    {TOKEN_TYPE, "I64"},
    {TOKEN_LBRACE, "{"},
    {TOKEN_MUT, "cst"},
    {TOKEN_ID, "ascii_code"},
    {TOKEN_COLON, ":"},
    {TOKEN_TYPE, "I64"},
    {TOKEN_EQUAL, "="},
    {TOKEN_ID, "num"},
    {TOKEN_PLUS, "+"},
    {TOKEN_INT, "48"},
    {TOKEN_END_INSTR, ";"},

    {TOKEN_RETURN, "return"},
    {TOKEN_ID, "ascii_code"},
    {TOKEN_END_INSTR, ";"},

    {TOKEN_RBRACE, "}"},
    {TOKEN_FUN, "fun"},
    {TOKEN_ID, "exit"},
    {TOKEN_LPAREN, "("},
    {TOKEN_MUT, "cst"},
    {TOKEN_ID, "error_code"},
    {TOKEN_COLON, ":"},
    {TOKEN_TYPE, "I64"},
    {TOKEN_RPAREN, ")"},
    {TOKEN_COLON, ":"},
    {TOKEN_TYPE, "Void"},
    {TOKEN_LBRACE, "{"},
    {TOKEN_AT, "@"},
    {TOKEN_ID, "syscall"},
    {TOKEN_LPAREN, "("},
    {TOKEN_INT, "60"},
    {TOKEN_COMMA, ","},
    {TOKEN_ID, "error_code"},
    {TOKEN_COMMA, ","},
    {TOKEN_INT, "0"},
    {TOKEN_COMMA, ","},
    {TOKEN_INT, "0"},
    {TOKEN_COMMA, ","},
    {TOKEN_INT, "0"},
    {TOKEN_COMMA, ","},
    {TOKEN_INT, "0"},
    {TOKEN_COMMA, ","},
    {TOKEN_INT, "0"},
    {TOKEN_RPAREN, ")"},
    {TOKEN_END_INSTR, ";"},

    {TOKEN_RBRACE, "}"},
    {TOKEN_FUN, "fun"},
    {TOKEN_ID, "write"},
    {TOKEN_LPAREN, "("},
    {TOKEN_MUT, "cst"},
    {TOKEN_ID, "fd"},
    {TOKEN_COLON, ":"},
    {TOKEN_TYPE, "I64"},
    {TOKEN_COMMA, ","},
    {TOKEN_MUT, "cst"},
    {TOKEN_ID, "buf_addr"},
    {TOKEN_COLON, ":"},
    {TOKEN_TYPE, "I64"},
    {TOKEN_COMMA, ","},
    {TOKEN_MUT, "cst"},
    {TOKEN_ID, "count"},
    {TOKEN_COLON, ":"},
    {TOKEN_TYPE, "I64"},
    {TOKEN_RPAREN, ")"},
    {TOKEN_COLON, ":"},
    {TOKEN_TYPE, "Void"},
    {TOKEN_LBRACE, "{"},
    {TOKEN_AT, "@"},
    {TOKEN_ID, "syscall"},
    {TOKEN_LPAREN, "("},
    {TOKEN_INT, "1"},
    {TOKEN_COMMA, ","},
    {TOKEN_ID, "fd"},
    {TOKEN_COMMA, ","},
    {TOKEN_ID, "buf_addr"},
    {TOKEN_COMMA, ","},
    {TOKEN_ID, "count"},
    {TOKEN_COMMA, ","},
    {TOKEN_INT, "0"},
    {TOKEN_COMMA, ","},
    {TOKEN_INT, "0"},
    {TOKEN_COMMA, ","},
    {TOKEN_INT, "0"},
    {TOKEN_RPAREN, ")"},
    {TOKEN_END_INSTR, ";"},

    {TOKEN_RETURN, "return"},
    {TOKEN_END_INSTR, ";"},

    {TOKEN_RBRACE, "}"},
    {TOKEN_FUN, "fun"},
    {TOKEN_ID, "print_num"},
    {TOKEN_LPAREN, "("},
    {TOKEN_MUT, "cst"},
    {TOKEN_ID, "num"},
    {TOKEN_COLON, ":"},
    {TOKEN_TYPE, "I64"},
    {TOKEN_RPAREN, ")"},
    {TOKEN_COLON, ":"},
    {TOKEN_TYPE, "Void"},
    {TOKEN_LBRACE, "{"},
    {TOKEN_MUT, "cst"},
    {TOKEN_ID, "asciicode"},
    {TOKEN_COLON, ":"},
    {TOKEN_TYPE, "I64"},
    {TOKEN_EQUAL, "="},
    {TOKEN_ID, "i32_to_asciicode"},
    {TOKEN_LPAREN, "("},
    {TOKEN_ID, "num"},
    {TOKEN_RPAREN, ")"},
    {TOKEN_END_INSTR, ";"},

    {TOKEN_ID, "write"},
    {TOKEN_LPAREN, "("},
    {TOKEN_INT, "1"},
    {TOKEN_COMMA, ","},
    {TOKEN_AMPERSAND, "&"},
    {TOKEN_ID, "asciicode"},
    {TOKEN_COMMA, ","},
    {TOKEN_INT, "1"},
    {TOKEN_RPAREN, ")"},
    {TOKEN_END_INSTR, ";"},

    {TOKEN_MUT, "cst"},
    {TOKEN_ID, "new_line_ascii_code"},
    {TOKEN_COLON, ":"},
    {TOKEN_TYPE, "I64"},
    {TOKEN_EQUAL, "="},
    {TOKEN_INT, "10"},
    {TOKEN_END_INSTR, ";"},

    {TOKEN_ID, "write"},
    {TOKEN_LPAREN, "("},
    {TOKEN_INT, "1"},
    {TOKEN_COMMA, ","},
    {TOKEN_AMPERSAND, "&"},
    {TOKEN_ID, "new_line_ascii_code"},
    {TOKEN_COMMA, ","},
    {TOKEN_INT, "1"},
    {TOKEN_RPAREN, ")"},
    {TOKEN_END_INSTR, ";"},

    {TOKEN_RETURN, "return"},
    {TOKEN_END_INSTR, ";"},

    {TOKEN_RBRACE, "}"},
    {TOKEN_FUN, "fun"},
    {TOKEN_ID, "add"},
    {TOKEN_LPAREN, "("},
    {TOKEN_MUT, "cst"},
    {TOKEN_ID, "a"},
    {TOKEN_COLON, ":"},
    {TOKEN_TYPE, "I64"},
    {TOKEN_COMMA, ","},
    {TOKEN_MUT, "cst"},
    {TOKEN_ID, "b"},
    {TOKEN_COLON, ":"},
    {TOKEN_TYPE, "I64"},
    {TOKEN_RPAREN, ")"},
    {TOKEN_COLON, ":"},
    {TOKEN_TYPE, "I64"},
    {TOKEN_LBRACE, "{"},
    {TOKEN_MUT, "cst"},
    {TOKEN_ID, "sum"},
    {TOKEN_COLON, ":"},
    {TOKEN_TYPE, "I64"},
    {TOKEN_EQUAL, "="},
    {TOKEN_ID, "a"},
    {TOKEN_PLUS, "+"},
    {TOKEN_ID, "b"},
    {TOKEN_END_INSTR, ";"},

    {TOKEN_RETURN, "return"},
    {TOKEN_ID, "sum"},
    {TOKEN_END_INSTR, ";"},

    {TOKEN_RBRACE, "}"},
    {TOKEN_ID, "_start"},
    {TOKEN_LBRACE, "{"},
    {TOKEN_MUT, "cst"},
    {TOKEN_ID, "num1"},
    {TOKEN_COLON, ":"},
    {TOKEN_TYPE, "I64"},
    {TOKEN_EQUAL, "="},
    {TOKEN_INT, "4"},
    {TOKEN_END_INSTR, ";"},

    {TOKEN_MUT, "cst"},
    {TOKEN_ID, "num2"},
    {TOKEN_COLON, ":"},
    {TOKEN_TYPE, "I64"},
    {TOKEN_EQUAL, "="},
    {TOKEN_INT, "4"},
    {TOKEN_END_INSTR, ";"},

    {TOKEN_MUT, "cst"},
    {TOKEN_ID, "sum"},
    {TOKEN_COLON, ":"},
    {TOKEN_TYPE, "I64"},
    {TOKEN_EQUAL, "="},
    {TOKEN_ID, "add"},
    {TOKEN_LPAREN, "("},
    {TOKEN_ID, "num1"},
    {TOKEN_COMMA, ","},
    {TOKEN_ID, "num2"},
    {TOKEN_RPAREN, ")"},
    {TOKEN_END_INSTR, ";"},

    {TOKEN_ID, "print_num"},
    {TOKEN_LPAREN, "("},
    {TOKEN_ID, "sum"},
    {TOKEN_RPAREN, ")"},
    {TOKEN_END_INSTR, ";"},

    {TOKEN_ID, "exit"},
    {TOKEN_LPAREN, "("},
    {TOKEN_INT, "0"},
    {TOKEN_RPAREN, ")"},
    {TOKEN_END_INSTR, ";"},

    {TOKEN_RBRACE, "}"},
    {TOKEN_EOF, ""},
]