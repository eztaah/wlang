program = Program(function_definitions*)

function_definitions = (identifier name, parameter*, block body)

parameter = Parameter(int size, identifier name)

block = Block(statement*)

statement = VarDeclaration(int size, identifier name, expr)

          | Assignement(identifier name, expr)

          | Return(expr) 

          | If(expr condition, block true_block, block false_block)

          | Loop(block)

          | Break

          | Expression(exp)

expr = Constant(int)

    | Var(identifier)

    | VarAddr(identifier)

    | Unary(unary_operator, expr)

    | Binary(binary_operator, expr, expr)

    | FunctionCall(identifier name, expr* args)   

unary_operator = Negate

binary_operator = Add | Subtract | Multiply | Divide | Remainder 

                | And | Or

                | Equal | NotEqual | LessThan | LessOrEqual | GreaterThan | GreaterOrEqual
